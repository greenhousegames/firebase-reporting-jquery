{"version":3,"sources":["app/app.js","app/click-report.js","app/firebase-client.js","app/reporting-service.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlrvEA;AAAA","file":"public/assets/js/app.js","sourcesContent":["'use strict';\n\nvar _firebase = require('firebase');\n\nvar _firebase2 = _interopRequireDefault(_firebase);\n\nvar _jquery = require('jquery');\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _reportingService = require('./reporting-service');\n\nvar _reportingService2 = _interopRequireDefault(_reportingService);\n\nvar _firebaseClient = require('./firebase-client');\n\nvar _firebaseClient2 = _interopRequireDefault(_firebaseClient);\n\nvar _clickReport = require('./click-report');\n\nvar _clickReport2 = _interopRequireDefault(_clickReport);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n(0, _jquery2.default)(document).foundation();\n\n// setup firebase\nvar firebaseClient = new _firebaseClient2.default();\nfirebaseClient.requireAuth(); // initiate login\n\n// setup reporting\nvar reportingService = new _reportingService2.default(firebaseClient.firebase);\nvar report = new _clickReport2.default(reportingService);\n\n(0, _jquery2.default)(document).ready(function () {\n  // draw charts once page is loaded and user is authenticated\n  report.loadCharts(function () {\n    firebaseClient.requireAuth().then(function () {\n      report.draw();\n    });\n  });\n\n  // setup buttons\n  jQuery('#a_button').click(function () {\n    firebaseClient.saveButtonClicked('a', reportingService);\n  });\n  jQuery('#b_button').click(function () {\n    firebaseClient.saveButtonClicked('b', reportingService);\n  });\n  jQuery('#c_button').click(function () {\n    firebaseClient.saveButtonClicked('c', reportingService);\n  });\n  jQuery('#d_button').click(function () {\n    firebaseClient.saveButtonClicked('d', reportingService);\n  });\n\n  // make charts responsive\n  (0, _jquery2.default)(window).resize(function () {\n    report.draw();\n  });\n\n  // update report when data saved\n  firebaseClient.onDataSaved(function () {\n    report.draw();\n  });\n});\n","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ClickReport = function () {\n  function ClickReport(reporting) {\n    _classCallCheck(this, ClickReport);\n\n    this.reporting = reporting;\n  }\n\n  _createClass(ClickReport, [{\n    key: 'loadCharts',\n    value: function loadCharts(done) {\n      google.charts.load('current', { 'packages': ['corechart'] });\n      google.charts.setOnLoadCallback(done);\n    }\n  }, {\n    key: 'draw',\n    value: function draw() {\n      this.drawTotalClicked();\n      this.drawTotalUsers();\n      this.drawLastClicked();\n      this.drawPieChart('pie_chart_div');\n      this.drawLineChart('line_chart_div', 'minute');\n      this.drawLineChart('line_chart_div2', 'hour');\n      this.drawLineChart('line_chart_div3', 'day');\n      this.drawLineChart('line_chart_div4', 'week');\n    }\n  }, {\n    key: 'drawLineChart',\n    value: function drawLineChart(id, during) {\n      var title = void 0;\n      var queryStartTime = new Date();\n      var queryEndTime = new Date();\n      queryStartTime.setMilliseconds(0);\n      queryStartTime.setSeconds(0);\n      queryStartTime.setMinutes(0);\n\n      switch (during) {\n        case 'minute':\n          title = 'Clicked this Hour';\n          queryEndTime.setTime(queryStartTime.getTime());\n          queryEndTime.setHours(queryStartTime.getHours() + 1);\n          break;\n        case 'hour':\n          title = 'Clicked Today';\n          queryStartTime.setHours(0);\n          queryEndTime.setTime(queryStartTime.getTime());\n          queryEndTime.setDate(queryStartTime.getDate() + 1);\n          break;\n        case 'day':\n          title = 'Clicked this Month';\n          queryStartTime.setHours(0);\n          queryStartTime.setDate(1);\n          queryEndTime.setTime(queryStartTime.getTime());\n          queryEndTime.setMonth(queryStartTime.getMonth() + 1);\n          break;\n        case 'week':\n          title = 'Clicked this Year';\n          queryStartTime.setHours(0);\n          queryStartTime.setDate(1);\n          queryStartTime.setMonth(1);\n          queryEndTime.setTime(queryStartTime.getTime());\n          queryEndTime.setFullYear(queryStartTime.getFullYear() + 1);\n          break;\n      }\n\n      var aClickedQuery = this.reporting.filter().sum('aclicked').during(during).range(queryStartTime.getTime(), queryEndTime.getTime()).values(true);\n      var bClickedQuery = this.reporting.filter().sum('bclicked').during(during).range(queryStartTime.getTime(), queryEndTime.getTime()).values(true);\n      var cClickedQuery = this.reporting.filter().sum('cclicked').during(during).range(queryStartTime.getTime(), queryEndTime.getTime()).values(true);\n      var dClickedQuery = this.reporting.filter().sum('dclicked').during(during).range(queryStartTime.getTime(), queryEndTime.getTime()).values(true);\n\n      Promise.all([aClickedQuery, bClickedQuery, cClickedQuery, dClickedQuery]).then(function (values) {\n        var element = jQuery('#' + id);\n        var chartdata = [['Time', 'A', 'B', 'C', 'D']];\n        for (var i = 0; i < values[0].length; i++) {\n          chartdata.push([new Date(values[0][i].timestamp), values[0][i].value, values[1][i].value, values[2][i].value, values[3][i].value]);\n        }\n        var data = new google.visualization.arrayToDataTable(chartdata);\n\n        // Set chart options\n        var options = {\n          title: title,\n          width: element.width(),\n          height: 400,\n          legend: { position: 'bottom' }\n        };\n\n        // Instantiate and draw our chart, passing in some options.\n        var chart = new google.visualization.LineChart(element[0]);\n        chart.draw(data, options);\n      });\n    }\n  }, {\n    key: 'drawPieChart',\n    value: function drawPieChart(id) {\n      var aClickedQuery = this.reporting.filter().sum('aclicked').value();\n      var bClickedQuery = this.reporting.filter().sum('bclicked').value();\n      var cClickedQuery = this.reporting.filter().sum('cclicked').value();\n      var dClickedQuery = this.reporting.filter().sum('dclicked').value();\n\n      Promise.all([aClickedQuery, bClickedQuery, cClickedQuery, dClickedQuery]).then(function (values) {\n        var element = jQuery('#' + id);\n        var data = new google.visualization.arrayToDataTable([['Button', 'Times Clicked'], ['A', values[0]], ['B', values[1]], ['C', values[2]], ['D', values[3]]]);\n\n        // Set chart options\n        var options = {\n          width: element.width(),\n          height: 400,\n          legend: { position: 'bottom' }\n        };\n\n        // Instantiate and draw our chart, passing in some options.\n        var chart = new google.visualization.PieChart(element[0]);\n        chart.draw(data, options);\n      });\n    }\n  }, {\n    key: 'drawTotalClicked',\n    value: function drawTotalClicked() {\n      var query = this.reporting.filter().sum('anyclicked').select(1);\n\n      query.then(function (values) {\n        jQuery('#total_clicked_count').text(values[0] || 0);\n      }).catch(function (err) {\n        console.log(err);\n      });\n    }\n  }, {\n    key: 'drawTotalUsers',\n    value: function drawTotalUsers() {\n      var query = this.reporting.filter('users').sum('anyclicked').count();\n\n      query.then(function (value) {\n        jQuery('#total_users_count').text(value || 0);\n      }).catch(function (err) {\n        console.log(err);\n      });\n    }\n  }, {\n    key: 'drawLastClicked',\n    value: function drawLastClicked() {\n      var query = this.reporting.filter().last('timestamp').select(1);\n\n      query.then(function (values) {\n        if (values.length === 0) {\n          jQuery('#last_clicked_time').text('never');\n        } else {\n          var date = new Date();\n          date.setTime(values[0]);\n          jQuery('#last_clicked_time').text(date.toLocaleString());\n        }\n      }).catch(function (err) {\n        console.log(err);\n      });\n    }\n  }]);\n\n  return ClickReport;\n}();\n\nmodule.exports = ClickReport;\n","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _firebase = require('firebase');\n\nvar _firebase2 = _interopRequireDefault(_firebase);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar FirebaseClient = function () {\n  function FirebaseClient() {\n    _classCallCheck(this, FirebaseClient);\n\n    this.firebase = _firebase2.default.initializeApp({\n      apiKey: 'AIzaSyDRf-RxCxWRecif5l-q2ZMEQ595ohApojs',\n      authDomain: 'fir-reporting.firebaseapp.com',\n      databaseURL: 'https://fir-reporting.firebaseio.com',\n      storageBucket: '',\n      messagingSenderId: '275159253276'\n    });\n    this.dataRef = this.firebase.database().ref('data');\n  }\n\n  _createClass(FirebaseClient, [{\n    key: 'saveButtonClicked',\n    value: function saveButtonClicked(button, reportingService) {\n      var _this = this;\n\n      var data = {\n        uid: this.firebase.auth().currentUser.uid,\n        timestamp: _firebase2.default.database.ServerValue.TIMESTAMP,\n        anyclicked: 1\n      };\n      data[button + 'clicked'] = 1;\n\n      // save metrics first to ensure onDataSaved callback\n      // is called after metrics have been calculated\n      reportingService.saveMetrics(data).then(function () {\n        _this.dataRef.push().set(data);\n      });\n    }\n  }, {\n    key: 'onDataSaved',\n    value: function onDataSaved(cb) {\n      var query = this.dataRef.orderByChild('timestamp');\n      query.limitToLast(1).once('value', function (snapshot) {\n        var data = snapshot.val();\n        var keys = data ? Object.keys(data) : null;\n\n        if (keys && keys.length > 0) {\n          query = query.startAt(data[keys[0]].timestamp + 1);\n        }\n\n        // setup listener\n        query.on('child_added', cb);\n      });\n    }\n  }, {\n    key: 'waitForAuth',\n    value: function waitForAuth() {\n      var auth = this.firebase.auth();\n      var promise = new Promise(function (resolve) {\n        var callback = function callback() {\n          off();\n          resolve();\n        };\n        var off = auth.onAuthStateChanged(callback);\n      });\n      return promise;\n    }\n  }, {\n    key: 'requireAuth',\n    value: function requireAuth() {\n      var _this2 = this;\n\n      var promise = new Promise(function (resolve, reject) {\n        _this2.waitForAuth().then(function () {\n          if (!_this2.firebase.auth().currentUser) {\n            _this2.firebase.auth().signInAnonymously().then(resolve).catch(reject);\n          } else {\n            resolve();\n          }\n        }).catch(reject);\n      });\n      return promise;\n    }\n  }]);\n\n  return FirebaseClient;\n}();\n\nmodule.exports = FirebaseClient;\n","'use strict';\n\nvar _firebaseReporting = require('@greenhousegames/firebase-reporting');\n\nvar _firebaseReporting2 = _interopRequireDefault(_firebaseReporting);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ReportingService = function (_FirebaseReporting) {\n  _inherits(ReportingService, _FirebaseReporting);\n\n  function ReportingService(firebase) {\n    _classCallCheck(this, ReportingService);\n\n    // Add report filter for users\n    var _this = _possibleConstructorReturn(this, (ReportingService.__proto__ || Object.getPrototypeOf(ReportingService)).call(this, {\n      firebase: firebase.database().ref('reporting')\n    }));\n\n    _this.addFilter('users', ['uid']);\n\n    // Metrics for timing\n    _this.addMetric('timestamp', ['first', 'last']);\n\n    // Metrics for ANY button clicked\n    _this.addMetric('anyclicked', ['sum']);\n    _this.enableRetainer('minute', 'anyclicked', ['sum']);\n    _this.enableRetainer('hour', 'anyclicked', ['sum']);\n    _this.enableRetainer('day', 'anyclicked', ['sum']);\n    _this.enableRetainer('week', 'anyclicked', ['sum']);\n\n    // Metrics for A button clicked\n    _this.addMetric('aclicked', ['sum']);\n    _this.enableRetainer('minute', 'aclicked', ['sum']);\n    _this.enableRetainer('hour', 'aclicked', ['sum']);\n    _this.enableRetainer('day', 'aclicked', ['sum']);\n    _this.enableRetainer('week', 'aclicked', ['sum']);\n\n    // Metrics for B button clicked\n    _this.addMetric('bclicked', ['sum']);\n    _this.enableRetainer('minute', 'bclicked', ['sum']);\n    _this.enableRetainer('hour', 'bclicked', ['sum']);\n    _this.enableRetainer('day', 'bclicked', ['sum']);\n    _this.enableRetainer('week', 'bclicked', ['sum']);\n\n    // Metrics for C button clicked\n    _this.addMetric('cclicked', ['sum']);\n    _this.enableRetainer('minute', 'cclicked', ['sum']);\n    _this.enableRetainer('hour', 'cclicked', ['sum']);\n    _this.enableRetainer('day', 'cclicked', ['sum']);\n    _this.enableRetainer('week', 'cclicked', ['sum']);\n\n    // Metrics for D button clicked\n    _this.addMetric('dclicked', ['sum']);\n    _this.enableRetainer('minute', 'dclicked', ['sum']);\n    _this.enableRetainer('hour', 'dclicked', ['sum']);\n    _this.enableRetainer('day', 'dclicked', ['sum']);\n    _this.enableRetainer('week', 'dclicked', ['sum']);\n    return _this;\n  }\n\n  return ReportingService;\n}(_firebaseReporting2.default);\n\nmodule.exports = ReportingService;\n"]}